<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BusinessService_CustomIdAccountNotMatching" xml:space="preserve">
    <value>Le compte KillProof.me {0} ne correspond pas avec le compte GW2 actuel {1}.</value>
  </data>
  <data name="BusinessService_CustomIdNoAccountFound" xml:space="preserve">
    <value>Le compte KillProof.me {0} n'existe pas.</value>
  </data>
  <data name="BusinessService_CustomIdSet" xml:space="preserve">
    <value>Id personnalisé configuré !</value>
  </data>
  <data name="BusinessService_Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="BusinessService_Refreshed" xml:space="preserve">
    <value>Rafraîchi</value>
  </data>
  <data name="BusinessService_RefreshNotAvailable" xml:space="preserve">
    <value>Rafraîchissement indisponible</value>
  </data>
  <data name="BusinessService_Wing" xml:space="preserve">
    <value>Aile</value>
  </data>
  <data name="CornerIcon_CancelNotify" xml:space="preserve">
    <value>Annuler l'averissement du prochain rafraîchissement</value>
  </data>
  <data name="CornerIcon_Copy" xml:space="preserve">
    <value>Copier l'identifiant KillProof.me Id dans le presse-papier</value>
  </data>
  <data name="CornerIcon_Notify" xml:space="preserve">
    <value>Avertir quand le prochain rafraîchissement est disponible</value>
  </data>
  <data name="CornerIcon_OpenWebsite" xml:space="preserve">
    <value>Ouvrir le site KillProof.me</value>
  </data>
  <data name="CornerIcon_Refresh" xml:space="preserve">
    <value>Rafraîchir les données KillProof.me</value>
  </data>
  <data name="CornerIcon_Tooltip" xml:space="preserve">
    <value>KpRefresher</value>
  </data>
  <data name="CornerIcon_Tooltip_Warning" xml:space="preserve">
    <value>KpRefresher - erreur avec l'api, veuillez patienter</value>
  </data>
  <data name="GW2APIService_Bank" xml:space="preserve">
    <value>Banque</value>
  </data>
  <data name="GW2APIService_SharedSlots" xml:space="preserve">
    <value>Inventaire partagé</value>
  </data>
  <data name="LoadingSpinner_Fetch" xml:space="preserve">
    <value>Récupération des données API</value>
  </data>
  <data name="MainWindow_Actions_Title" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="MainWindow_Button_ClearNotif_Label" xml:space="preserve">
    <value>Nettoyer les notifications</value>
  </data>
  <data name="MainWindow_Button_ClearSchedule_Label" xml:space="preserve">
    <value>Annuler la programmation</value>
  </data>
  <data name="MainWindow_Button_ClearSchedule_Tooltip" xml:space="preserve">
    <value>Annule tout rafraîchissement programmé</value>
  </data>
  <data name="MainWindow_Button_RefreshLinkedAccounts_Label" xml:space="preserve">
    <value>Rafraîchir les comptes liés</value>
  </data>
  <data name="MainWindow_Button_RefreshLinkedAccounts_Tooltip" xml:space="preserve">
    <value>Essaie de rafraîchir les autres comptes liés au profil KillProof.me</value>
  </data>
  <data name="MainWindow_Button_Refresh_Label" xml:space="preserve">
    <value>Rafraîchir KillProof.me</value>
  </data>
  <data name="MainWindow_Button_Refresh_Tooltip" xml:space="preserve">
    <value>Essaie de rafraîchir le profil KillProof.me
Si les essais automatiques sont activés, un nouveau rafraîchissement sera programmé en cas d'échec</value>
  </data>
  <data name="MainWindow_Button_ShowClears_Label" xml:space="preserve">
    <value>Afficher les clears</value>
  </data>
  <data name="MainWindow_Button_ShowClears_Tooltip" xml:space="preserve">
    <value>Affiche les raids effectués selon KillProof.me and GW2

Si la couleur est verte, cela veut dire que le clear a enregistré sur KillProof.me
Si la couleur est violette, cela veut dire que le clear est visible depuis l'API GW2, et peut être enregistrée sur KillProof.me grâce à un rafraîchissement</value>
  </data>
  <data name="MainWindow_Button_ShowKP_Label" xml:space="preserve">
    <value>Afficher les KP actuels</value>
  </data>
  <data name="MainWindow_Button_ShowKP_Tooltip" xml:space="preserve">
    <value>Scanne la banque, l'inventaire partagé et les personnages, puis affiche les KP stockés selon l'API GW2.
Chaque kp dans la liste peut-être ajouté sur KillProof.me, s'il n'a pas déjà été scanné. Cette fonctionnalité peut être utile pour vérifier si le contenu d'un coffre de raid est déjà visible pour KillProof.me, par exemple.</value>
  </data>
  <data name="MainWindow_Configuration_Title" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="MainWindow_CustomId_EditNotif" xml:space="preserve">
    <value>Appuyer sur entrée pour sauvegarder.</value>
  </data>
  <data name="MainWindow_CustomId_Label" xml:space="preserve">
    <value>Id personnalisé</value>
  </data>
  <data name="MainWindow_CustomId_Tooltip" xml:space="preserve">
    <value>Remplace le nom de compte GW2. A n'utiliser que si la configuration par défaut ne fonctionne pas pour vous.</value>
  </data>
  <data name="MainWindow_DelayBeforeRefreshOnMapChange_Label" xml:space="preserve">
    <value>Délai avant rafraîchissement</value>
  </data>
  <data name="MainWindow_DelayBeforeRefreshOnMapChange_Tooltip" xml:space="preserve">
    <value>Temps en minutes avant qu'un rafraîchissement ne soit déclenché lors d'un changement de carte (entre 1 et 60)</value>
  </data>
  <data name="MainWindow_EnableAutoRetry_Label" xml:space="preserve">
    <value>Nouvel essai automatique</value>
  </data>
  <data name="MainWindow_EnableAutoRetry_Tooltip" xml:space="preserve">
    <value>Programme automatiquement un nouvel essai quand KillProof.me est indisponible</value>
  </data>
  <data name="MainWindow_EnableRefreshOnKill_Label" xml:space="preserve">
    <value>Rafraîchissement conditionnel</value>
  </data>
  <data name="MainWindow_EnableRefreshOnKill_Tooltip" xml:space="preserve">
    <value>Ne rafraîchit que si un clear a été effectué et est visible par l'API GW2</value>
  </data>
  <data name="MainWindow_HideAllMessages_Label" xml:space="preserve">
    <value>Masquer tous les messages</value>
  </data>
  <data name="MainWindow_HideAllMessages_Tooltip" xml:space="preserve">
    <value>Cache toutes les notifications, utile quand l'api est KO</value>
  </data>
  <data name="MainWindow_Notif_LinkedAccounts" xml:space="preserve">
    <value>{0} compte{1} lié{1} trouvé{1} !
{2}</value>
  </data>
  <data name="MainWindow_Notif_Loading" xml:space="preserve">
    <value>Chargement ...</value>
  </data>
  <data name="MainWindow_Notif_NoLinkedAccount" xml:space="preserve">
    <value>Aucun compte lié trouvé !</value>
  </data>
  <data name="MainWindow_Notif_NoSchedule" xml:space="preserve">
    <value>Aucun rafraîchissement programmé</value>
  </data>
  <data name="MainWindow_Notif_ScheduleDisabled" xml:space="preserve">
    <value>Rafraîchissement annulé !</value>
  </data>
  <data name="MainWindow_RefreshOnKillOnlyBoss_Label" xml:space="preserve">
    <value>Conditionne au kill de boss de fin</value>
  </data>
  <data name="MainWindow_RefreshOnKillOnlyBoss_Tooltip" xml:space="preserve">
    <value>Rafraîchir uniquement quand un boss de fin d'aile de raid a été vaincu (ex: Sabetha)</value>
  </data>
  <data name="MainWindow_RefreshOnMapChange_Label" xml:space="preserve">
    <value>Rafraîchir au changement de carte</value>
  </data>
  <data name="MainWindow_RefreshOnMapChange_Tooltip" xml:space="preserve">
    <value>Programmer un rafraîchissement lors d'une sortie de carte de raid ou de mission d'attaque</value>
  </data>
  <data name="MainWindow_ShowScheduleNotification_Label" xml:space="preserve">
    <value>Afficher les notifications</value>
  </data>
  <data name="MainWindow_ShowScheduleNotification_Tooltip" xml:space="preserve">
    <value>Afficher les notifications pour les essais planifiés</value>
  </data>
  <data name="MainWindow_Spinner_Minutes" xml:space="preserve">
    <value>Prochain essai dans {0} minute{1}.</value>
  </data>
  <data name="MainWindow_Spinner_Seconds" xml:space="preserve">
    <value>Prochain essai dans {0} seconde{1}.</value>
  </data>
  <data name="Notification_CopiedToClipboard" xml:space="preserve">
    <value>[KpRefresher] Identifiant copié dans le presse-papier !</value>
  </data>
  <data name="Notification_CustomIdAccountNotMatching" xml:space="preserve">
    <value>[KpRefresher] Le compte KillProof.me {0} ne correspond pas
avec le compte GW2 actuel {1}.</value>
  </data>
  <data name="Notification_DataNotAvailable" xml:space="preserve">
    <value>[KpRefresher] Les données KillProof.me ne sont pas disponibles
Veuillez réessayer plus tard.</value>
  </data>
  <data name="Notification_InstanceExitDetected" xml:space="preserve">
    <value>[KpRefresher] Sortie d'instance détectée
Rafraîchissement programmé dans {0} minute{1}</value>
  </data>
  <data name="Notification_KpAccountAnonymous" xml:space="preserve">
    <value>[KpRefresher] Rafraîchissement échoué
Veuillez autoriser le rafraîchissement anonyme
dans les paramètres KillProof.me</value>
  </data>
  <data name="Notification_KpAccountUnknown" xml:space="preserve">
    <value>[KpRefresher] Le compte KillProof.me {0} n'existe pas !</value>
  </data>
  <data name="Notification_KPProfileFetchError" xml:space="preserve">
    <value>[KpRefresher] Erreur lors de la récupération du profil KillProof.me.
Veuillez réessayer plus tard.</value>
  </data>
  <data name="Notification_NextRefreshAvailableIn" xml:space="preserve">
    <value>[KpRefresher] Prochain rafraîchissement disponible dans {0} minute{1}</value>
  </data>
  <data name="Notification_NoClearRefreshAborted" xml:space="preserve">
    <value>[KpRefresher] Les conditions de clear ne sont pas validées
Rafraîchissement annulé  !</value>
  </data>
  <data name="Notification_NotifyScheduled" xml:space="preserve">
    <value>[KpRefresher] Vous serez averti quand le prochain rafraîchissement
sera disponible, dans environ {0} minute{1}.</value>
  </data>
  <data name="Notification_RefreshAvailable" xml:space="preserve">
    <value>[KpRefresher] Le rafraîchissement est disponible !</value>
  </data>
  <data name="Notification_RefreshNotAvailable" xml:space="preserve">
    <value>[KpRefresher] Le rafraîchissement de KillProof.me n'est pas disponible
Veuillez réessayer plus tard.</value>
  </data>
  <data name="Notification_RefreshNotAvailableRetry" xml:space="preserve">
    <value>[KpRefresher] Le rafraîchissement de KillProof.me n'est pas disponible
Nouvel essai dans 5 minutes.</value>
  </data>
  <data name="Notification_RefreshOk" xml:space="preserve">
    <value>[KpRefresher] Rafraîchissement de KillProof.me réussi !</value>
  </data>
  <data name="Notification_TryScheduled" xml:space="preserve">
    <value>{0}
Un nouvel essai a été planifié.</value>
  </data>
</root>